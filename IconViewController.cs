// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Diagnostics;
using MacGallery.Extensions;
using MacGallery.MainWindow;
using System.Linq;

namespace MacGallery
{
    public partial class IconViewController : NSViewController
    {
        private NSMutableArray<IconView> _icons = new();

        [Export("icons")]
        public NSMutableArray<IconView> Icons
        {
            get => _icons;
        }

        [Export("setIcons:")]
        public void SetIcons(NSMutableArray<IconView> array)
        {
            WillChangeValue("icons");
            _icons = array;
            DidChangeValue("icons");
        }

        public void SetWorkingDirectoryUrl(NSUrl? workingDirectoryUrl)
        {
            if (workingDirectoryUrl is null)
            {
                throw new ArgumentNullException(nameof(workingDirectoryUrl));
            }

            Task.Run(() =>
            {
                try
                {
                    //WindowViewController.SendShowProgress();
                    var contents = GatherContents(workingDirectoryUrl);
                    SetIcons(new NSMutableArray<IconView>(contents.ToArray()));
                }
                catch (Exception ex)
                {
                    Debug.WriteLine(ex);
                }
                finally
                {
                    WindowViewController.SendHideProgress();
                }
            });
        }

        private List<IconView> GatherContents(NSUrl url)
        {
            var contentArray = new List<IconView>();
            var files = NSFileManager.DefaultManager.GetDirectoryContent(url,
                                                        NSArray.FromObjects(NSUrl.IsDirectoryKey, NSUrl.IsPackageKey, NSUrl.TypeIdentifierKey, NSUrl.LocalizedNameKey),
                                                        NSDirectoryEnumerationOptions.SkipsHiddenFiles,
                                                        out var error);
            if (error != null)
            {
                Debug.WriteLine(error);
                throw new NSErrorException(error);
            }

            foreach (var element in files)
            {
                var elementNameStr = element.GetLocalizedName();
                var elementIcon = element.GetIcon();

                contentArray.Add(new IconView
                {
                    Icon = elementIcon,
                    Name = elementNameStr,
                });
            }

            return contentArray;
        }

        public IconViewController(IntPtr handle) : base(handle) { }
    }
}
